#dotnet 
curl -o dotnet7.tar.gz "https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/sdk-7.0.102-linux-x64-binaries"
curl -o dotnet7-runtime.tar.gz "https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-aspnetcore-7.0.2-linux-x64-binaries"

# Install a local K8S "cluster" with minikube, helm, and kubectl (although minikube includes a binary for kubectl)
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

curl -o helm.tar.gz 'https://get.helm.sh/helm-v3.10.3-linux-amd64.tar.gz'
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
	curl -o k8scheatsheet.html "https://kubernetes.io/docs/reference/kubectl/cheatsheet/"

# Install nodejs
curl -o node.tar.gz "https://nodejs.org/download/release/latest-v19.x/node-v19.4.0-linux-x64.tar.gz"

#### java - direct install gradle and direct maven install examples
curl -o gradle-7.5.1.zip "https://downloads.gradle-dn.com/distributions/gradle-7.5.1-bin.zip" && unzip gradle-7.5.1.zip && export PATH="/gradle-7.5.1/bin/:$PATH"
curl -SLf "https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz" | tar zxvf -

#altamira
curl -ki --header "PRIVATE-TOKEN: ${MATTS_PAT_ALTAMIRA}" "https://gitlab.altamiracorp.com/api/v4/projects/1929"
curl -ki --header "PRIVATE-TOKEN: ${MATTS_PAT_ALTAMIRA}" "https://gitlab.altamiracorp.com/api/v4/projects/1931"

export COOKIE='KEY=VALUE'
curl -i --cookie "$COOKIE" "https://..."

curl --header "PRIVATE-TOKEN: ${MATTS_PAT_ZMTRWE}" --request "DELETE" "https://gitlab.zmtrwe.com/ssp/cfal/base-images/-/pipelines/32874"

curl --header "PRIVATE-TOKEN: ${MATTS_PAT_BRILLIGENT}" --request GET "https://git.brilligent.com/api/v4/projects"
curl --request POST --header "PRIVATE-TOKEN: ${MATTS_PAT_BRILLIGENT}" \
--header "Content-Type: application/json" --data '{
  "name": "templates", "description": "Contain common templates to share functionality and include in other projects", "path": "templates",
  "namespace_id": "718", "initialize_with_readme": "false"}' \
--url 'https://git.brilligent.com/api/v4/projects/'


##installing docker with curl
############################################################################### DOCKER
#Install docker on a debian like system
cd && mkdir docker && cd docker
# https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/
curl -o cli.deb "https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/docker-ce-cli_19.03.15~3-0~debian-stretch_amd64.deb"
curl -o containerd.deb "https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/containerd.io_1.4.3-1_amd64.deb"
curl -o docker.deb "https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/docker-ce_19.03.15~3-0~debian-stretch_amd64.deb"

sudo dpkg -i ./containerd.deb
sudo dpkg -i ./docker.deb
sudo dpkg -i ./cli.deb

curl -SL https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-linux-x86_64 -o $HOME/.docker/cli-plugins/docker-compose

curl -k -o image.png "https://argus.zmtrwe.com/geoserver/wms\
?format=image/png\
&tiled=true\
&transparent=true\
&service=WMS\
&version=1.1.1\
&request=GetMap\
&styles=\
&layers=mdpap:World_Countries_Boundaries\
&bbox=-180,-90,0,90\
&width=256\
&height=256\
&srs=EPSG:4326"

curl "http://matt:1234/api-docs" | jq -r '(.paths | 'keys'),.openapi,.info'